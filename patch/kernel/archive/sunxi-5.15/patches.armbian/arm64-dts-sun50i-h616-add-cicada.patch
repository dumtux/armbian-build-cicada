diff --git a/arch/arm64/boot/dts/allwinner/Makefile b/arch/arm64/boot/dts/allwinner/Makefile
index 7dcf90b32..d72c973ae 100644
--- a/arch/arm64/boot/dts/allwinner/Makefile
+++ b/arch/arm64/boot/dts/allwinner/Makefile
@@ -49,5 +49,6 @@ dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h6-pine-h64-model-b.dtb
 dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h6-tanix-tx6.dtb
 dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h616-orangepi-zero2.dtb
 dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h616-x96-mate.dtb
+dtb-$(CONFIG_ARCH_SUNXI) += sun50i-h616-cicada.dtb
 
 subdir-y	:= $(dts-dirs) overlay
diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h616-cicada.dts b/arch/arm64/boot/dts/allwinner/sun50i-h616-cicada.dts
new file mode 100644
index 000000000..e3bf761e9
--- /dev/null
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h616-cicada.dts
@@ -0,0 +1,252 @@
+// SPDX-License-Identifier: (GPL-2.0+ or MIT)
+/*
+ * Copyright (C) 2020 Arm Ltd.
+ */
+
+/dts-v1/;
+
+#include "sun50i-h616.dtsi"
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/leds/common.h>
+
+/ {
+	model = "Care.ai Cicada";
+	compatible = "careai,cicada", "allwinner,sun50i-h616";
+
+	aliases {
+		ethernet0 = &emac0;
+		serial0 = &uart0;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	reg_vcc5v: vcc5v {
+		/* board wide 5V supply directly from the USB-C socket */
+		compatible = "regulator-fixed";
+		regulator-name = "vcc-5v";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		regulator-always-on;
+	};
+
+	reg_vcc3v3: vcc3v3 {
+		/* board wide 5V supply directly from the USB-C socket */
+		compatible = "regulator-fixed";
+		regulator-name = "vcc-3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	pwrseq_wifi: pwrseq_wifi {
+		compatible = "mmc-pwrseq-simple";
+		//pinctrl-names = "default";
+		//pinctrl-0 = <&wifi_rst>;
+		reset-gpios = <&pio 6 11 GPIO_ACTIVE_LOW>;
+		post-power-on-delay-ms = <50>;
+	};
+
+};
+
+&ehci1 {
+	status = "okay";
+};
+
+&cpu0 {
+//	cpu-supply = <&reg_dcdca>;
+};
+
+&gpu {
+//	mali-supply = <&reg_dcdcb>;
+	status = "okay";
+};
+
+/* USB 2 & 3 are on headers only. */
+
+&emac1 {
+	syscon = <&syscon 0>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&rmii_pins>;
+	phy-mode = "rmii";
+	phy-handle = <&rmii_phy>;
+	phy-supply = <&reg_vcc3v3>;
+	allwinner,rx-delay-ps = <3100>;
+	allwinner,tx-delay-ps = <700>;
+	status = "okay";
+};
+
+&mdio1{
+	rmii_phy: ethernet-phy@1 {
+		compatible = "ethernet-phy-ieee802.3-c22";
+		reg = <1>;
+	};
+};
+
+&mmc0 {
+	vmmc-supply = <&reg_vcc3v3>;
+//	cd-gpios = <&pio 5 6 GPIO_ACTIVE_HIGH>;	/* PF6 */
+	bus-width = <4>;
+	status = "okay";
+};
+
+&mmc1 {
+	//vqmmc-supply = <&reg_vcc3v3>;
+	vmmc-supply = <&reg_vcc3v3>;
+	bus-width = <4>;
+	status = "okay";
+	mmc-pwrseq = <&pwrseq_wifi>;
+	non-removable;
+
+        xr819wifi: xr819wifi@1 {
+                reg = <1>;
+                compatible = "xradio,xr819";
+                pinctrl-names = "default";
+                pinctrl-0 = <&wifi_wake>;
+                interrupt-parent = <&pio>;
+                interrupts = <6 12 IRQ_TYPE_EDGE_RISING>;
+                interrupt-names = "host-wake";
+                local-mac-address = [dc 44 6d c0 ff ee];
+        };
+
+};
+
+&pio {
+	wifi_wake: wifi_wake {
+		pins = "PG12";
+		function = "gpio_in";
+    };
+
+	wifi_rst: wifi_rst {
+		pins = "PG11";
+		function = "gpio_out";
+    };
+};
+
+&ohci1 {
+	status = "okay";
+};
+
+&r_i2c {
+	status = "okay";
+/*
+	axp305: pmic@36 {
+		compatible = "x-powers,axp305", "x-powers,axp805",
+			     "x-powers,axp806";
+		//interrupt-controller;
+		//#interrupt-cells = <1>;
+		reg = <0x36>;
+
+		x-powers,self-working-mode;
+		vina-supply = <&reg_vcc5v>;
+		vinb-supply = <&reg_vcc5v>;
+		vinc-supply = <&reg_vcc5v>;
+		vind-supply = <&reg_vcc5v>;
+		vine-supply = <&reg_vcc5v>;
+		aldoin-supply = <&reg_vcc5v>;
+		bldoin-supply = <&reg_vcc5v>;
+		cldoin-supply = <&reg_vcc5v>;
+
+		regulators {
+			reg_aldo1: aldo1 {
+				regulator-always-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+				regulator-name = "vcc1v8";
+			};
+
+			aldo2 {
+			};
+
+			aldo3 {
+			};
+	
+			reg_bldo1: bldo1 {
+				regulator-always-on;
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-name = "vcc-sys";
+			};
+
+			bldo2 {
+			};
+
+			bldo3 {
+			};
+
+			bldo4 {
+			};
+
+			cldo1 {
+			};
+
+			cldo2 {
+			};
+
+			cldo3 {
+			};
+
+			reg_dcdca: dcdca {
+				regulator-always-on;
+				regulator-min-microvolt = <810000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-name = "vdd-cpu";
+			};
+
+			reg_dcdcb: dcdcb {
+				regulator-always-on;
+				regulator-min-microvolt = <810000>;
+				regulator-max-microvolt = <1540000>;
+				regulator-name = "vdd-gpu-sys";
+			};
+
+			reg_dcdcc: dcdcc {
+				regulator-always-on;
+				regulator-min-microvolt = <1500000>;
+				regulator-max-microvolt = <1500000>;
+				regulator-name = "vdd-dram";
+			};
+
+			dcdcd {
+			};
+
+			dcdce {
+			};
+
+
+			sw {
+			};
+		};
+	};
+*/
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_ph_pins>;
+	status = "okay";
+};
+
+&usbotg {
+	/*
+	 * PHY0 pins are connected to a USB-C socket, but a role switch
+	 * is not implemented: both CC pins are pulled to GND.
+	 * The VBUS pins power the device, so a fixed peripheral mode
+	 * is the best choice.
+	 * The board can be powered via GPIOs, in this case port0 *can*
+	 * act as a host (with a cable/adapter ignoring CC), as VBUS is
+	 * then provided by the GPIOs. Any user of this setup would
+	 * need to adjust the DT accordingly: dr_mode set to "host",
+	 * enabling OHCI0 and EHCI0.
+	 */
+	dr_mode = "peripheral";
+	status = "okay";
+};
+
+&usbphy {
+	usb1_vbus-supply = <&reg_vcc5v>;
+	status = "okay";
+};
